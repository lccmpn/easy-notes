<Page
    x:Class="EasyNotes.EditTodoNotePage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:EasyNotes"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
    <Page.Resources>
        <x:Double x:Key="TextControlThemeMinWidth">51</x:Double>
        <x:Double x:Key="TextControlThemeMinHeight">34</x:Double>
        <Thickness x:Key="TextControlBorderThemeThickness">2.5</Thickness>
        <FontFamily x:Key="PhoneFontFamilyNormal">Segoe WP</FontFamily>
        <x:Double x:Key="ContentControlFontSize">20.26</x:Double>
        <Thickness x:Key="TextControlThemePadding">7,0.8,8,0</Thickness>
        <Thickness x:Key="TextControlMarginThemeThickness">0,9.5,0,9.5</Thickness>
        <Thickness x:Key="TextControlHeaderMarginThemeThickness">0,0,0,4.8</Thickness>
        <SolidColorBrush x:Key="TextBoxDisabledBackgroundThemeBrush" Color="Transparent"/>
        <x:Double x:Key="TextControlBorderThemeOpacity">0.8</x:Double>
        <Style x:Key="TextBoxStyle1" TargetType="TextBox">
            <Setter Property="MinWidth" Value="{ThemeResource TextControlThemeMinWidth}"/>
            <Setter Property="MinHeight" Value="{ThemeResource TextControlThemeMinHeight}"/>
            <Setter Property="Foreground" Value="{ThemeResource TextBoxForegroundThemeBrush}"/>
            <Setter Property="SelectionHighlightColor" Value="{ThemeResource TextSelectionHighlightColorThemeBrush}"/>
            <Setter Property="Background" Value="{ThemeResource TextBoxBackgroundThemeBrush}"/>
            <Setter Property="BorderBrush" Value="{ThemeResource TextBoxBorderThemeBrush}"/>
            <Setter Property="BorderThickness" Value="{ThemeResource TextControlBorderThemeThickness}"/>
            <Setter Property="FontFamily" Value="{ThemeResource PhoneFontFamilyNormal}"/>
            <Setter Property="FontSize" Value="{ThemeResource ContentControlFontSize}"/>
            <Setter Property="TextWrapping" Value="NoWrap"/>
            <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollMode" Value="Auto"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden"/>
            <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False"/>
            <Setter Property="Padding" Value="{ThemeResource TextControlThemePadding}"/>
            <Setter Property="Margin" Value="{ThemeResource TextControlMarginThemeThickness}"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Grid Background="Transparent">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="BorderElement">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextBoxDisabledBackgroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="BorderElement">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextBoxDisabledBorderThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentElement">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextBoxDisabledForegroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="PlaceholderTextContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextBoxDisabledForegroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="HeaderContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextBoxDisabledHeaderForegroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Normal">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="{ThemeResource TextControlBorderThemeOpacity}" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BorderElement"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Focused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="BorderElement">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextSelectionHighlightColorThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PlaceholderTextContentPresenter"/>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="BorderElement">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Transparent"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border x:Name="BorderElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Row="1"/>
                            <ContentPresenter x:Name="HeaderContentPresenter" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Margin="{ThemeResource TextControlHeaderMarginThemeThickness}" Grid.Row="0" Style="{StaticResource HeaderContentPresenterStyle}"/>
                            <ScrollViewer x:Name="ContentElement" AutomationProperties.AccessibilityView="Raw" HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" IsTabStop="False" IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}" IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}" IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}" Margin="{TemplateBinding BorderThickness}" MinHeight="{ThemeResource TextControlThemeMinHeight}" Padding="{TemplateBinding Padding}" Grid.Row="1" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}" ZoomMode="Disabled"/>
                            <ContentControl x:Name="PlaceholderTextContentPresenter" Content="{TemplateBinding PlaceholderText}" Foreground="Gray" FontSize="{TemplateBinding FontSize}" IsTabStop="False" Margin="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" Grid.Row="1"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Page.Resources>
    <ScrollViewer>
        <Grid x:Name="LayoutRoot" VerticalAlignment="Stretch">

            <Grid.ChildrenTransitions>
                <TransitionCollection>
                    <EntranceThemeTransition/>
                </TransitionCollection>
            </Grid.ChildrenTransitions>

            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <!-- Title Panel -->
            <StackPanel Grid.Row="0" Margin="19,0,19,0">
                <TextBlock x:Uid="Header" Style="{ThemeResource TitleTextBlockStyle}" Margin="0,12,0,0"/>
                <TextBox x:Uid="Title" Text="{Binding Path=Title, Mode=TwoWay}" 
                     Margin="0,6.5,0,0" 
                     Height="80"
                     FontSize="40"
                     TextWrapping="Wrap"
                     Foreground="White"
                     Background="Black"
                     BorderBrush="Black"
                     VerticalAlignment="Center"
                     Style="{StaticResource TextBoxStyle1}"/>
            </StackPanel>

            <!--TODO: Content should be placed within the following grid-->
            <Grid Grid.Row="1" x:Name="ContentRoot" Margin="19,9.5,19,0">
                <ListView
                    x:Name="TodoNotesList"
                    ItemsSource="{Binding}"

                    ContinuumNavigationTransitionInfo.ExitElementContainer="True">
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        </Style>
                    </ListView.ItemContainerStyle>
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <Grid Margin="0,0,0,9.5" VerticalAlignment="Center">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="45"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <CheckBox Grid.Column="0"
                                      IsChecked="{Binding Path=IsDone, Mode=TwoWay}"/>
                                <TextBox
                                Grid.Column="1"
                                    x:Uid="Content"
                                    x:Name="ContentTextBox"
                                    Text="{Binding Path=Content, Mode=TwoWay}"
                                    TextWrapping="Wrap"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Center"
                                    Pivot.SlideInAnimationGroup="1"
                                    Style="{StaticResource TextBoxStyle1}"
                                    Foreground="White"
                                    Background="Black"
                                    BorderBrush="Black"
                                    FontSize="25"
                                    Margin="0,0,19,0" 
                                    Loaded="ContentTextBox_Loaded"/>
                            </Grid>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </Grid>
            <Grid x:Name="RememberNoteGrid" Visibility="Collapsed" Grid.Row="3" Margin="19,9.5,19,0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <TextBlock Grid.Row="0" FontSize="20" Text="Notify on:" />
                <Grid Grid.Row="1">
                    <DatePicker x:Name="RememberingDatePicker" Date="{Binding Path=NotificationDate, Mode=TwoWay}" Grid.Column="0" HorizontalAlignment="Stretch" Margin="0,0,9,0"/>
                    <TimePicker x:Name="RememberingTimePicker" Time="{Binding Path=NotificationTime, Mode=TwoWay}" Grid.Column="1" HorizontalAlignment="Stretch" Margin="9,0,0,0"/>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                </Grid>
                
                <!--<Button Grid.Row="1" x:Name="SelectRememberingTime" Margin="19,0,19,0" Content="When" HorizontalAlignment="Stretch" Click="SelectRememberingTime_Click" >
                    <FlyoutBase.AttachedFlyout>
                        <MenuFlyout>
                            <MenuFlyoutItem Text="15 minutes before" Click="FifteenMinutes_Click" />
                            <MenuFlyoutItem Text="One hour before" Click="OneHour_Click"/>
                        </MenuFlyout>
                    </FlyoutBase.AttachedFlyout>
                </Button>
                <Button Grid.Row="2" x:Name="DiscardRemembering" Margin="19,0,19,0" Content="Delete" HorizontalAlignment="Stretch" Click="DiscardRemembering_Click"/>
                -->
            </Grid>

        </Grid>
    </ScrollViewer>
    <Page.BottomAppBar>
        <CommandBar>
            <AppBarButton x:Uid="SaveAppBarButton" x:Name="SaveAppBarButton" Icon="Save" Click="SaveNoteBarButton_Click" />
            <AppBarButton x:Uid="AddAppBarButton" x:Name="AddAppBarButton" Icon="Add" Click="AddAppBarButton_Click" />
            <AppBarButton x:Name="CalendarAppBarButton" Icon="Calendar" Click="CalendarAppBarButton_Click" />
                <!--<AppBarButton.Flyout>
                    <DatePickerFlyout x:Name="myDatePickerFlyout" />
                </AppBarButton.Flyout>-->
            
            <AppBarButton Visibility="Collapsed" x:Name="CancelSchedulingAppBarButton" Icon="Cancel" Click="CancelSchedulingAppBarButton_Click" />
                          
        </CommandBar>
    </Page.BottomAppBar>
        
</Page>
